kind: ConfigMap
metadata:
  name: conf-d
  namespace: mysql
apiVersion: v1
data:
  datadir.cnf: |
    [mysqld]
    datadir=/data/db
  galera.cnf: |
    #
    # * Galera-related settings
    #
    # https://mariadb.com/kb/en/mariadb/galera-cluster-system-variables/
    #
    [galera]
    # Mandatory settings
    wsrep_on=ON
    wsrep_provider="/usr/lib/galera/libgalera_smm.so"
    #init-new-cluster#wsrep_new_cluster=TRUE
    #init-recover#wsrep_recover=TRUE
    wsrep_cluster_address="gcomm://mariadb-0.mariadb,mariadb-1.mariadb,mariadb-2.mariadb"
    wsrep_provider_options="pc.recovery = TRUE; gcache.name = /data/db/galera.cache; gcache.size=1G; gcache.page_size=1G; gcache.recover = yes"
    wsrep_slave_threads=4
    wsrep_replicate_myisam=ON
    wsrep_causal_reads=ON

    binlog_format=ROW
    default_storage_engine=InnoDB
    innodb_autoinc_lock_mode=2
    wsrep-sst-method=rsync

    #
    # Allow server to accept connections on all interfaces.
    #
    bind-address=0.0.0.0
    #
    # Optional setting
    #wsrep_slave_threads=1
    #innodb_flush_log_at_trx_commit=0
  config.cnf: |
    [client-server]

    # This will be passed to all mysql clients
    [client]
    default-character-set = utf8mb4

    # The MySQL server
    [mysqld]
    character-set-client-handshake = FALSE
    character-set-server = utf8mb4
    collation-server = utf8mb4_unicode_ci
    init_connect = 'SET NAMES utf8mb4'

    skip-name-resolve
    query_cache_size = 0

    log-error = /data/db/error.log

    slow-query-log = 1
    long_query_time = 2
    slow-query-log-file = /data/db/slow.log
    expire-logs-days = 1

    default-storage-engine = innodb
    innodb-buffer-pool-size = 1G

    lower_case_table_names = 1
    performance-schema-instrument='memory/%=COUNTED'
    interactive_timeout = 172800
    wait_timeout = 172800
    max_allowed_packet = 1024M

    [mysql]
    default-character-set = utf8mb4

    [mysqldump]

    # This group is only read by MariaDB servers, not by MySQL.
    # If you use the same .cnf file for MySQL and MariaDB,
    # you can put MariaDB-only options here
    [mariadb]

    [mariadb-10.1]

    [mariadb-10.2]
  init.sh: |
    #!/bin/bash
    set -x
    [ "$(pwd)" != "/etc/mysql/conf.d" ] && cp * /etc/mysql/conf.d/

    HOST_ID=${HOSTNAME##*-}

    STATEFULSET_SERVICE=$(dnsdomainname -d)
    POD_FQDN=$(dnsdomainname -A)

    echo "This is pod $HOST_ID ($POD_FQDN) for statefulset $STATEFULSET_SERVICE"

    [ -z "$DATADIR" ] && exit "Missing DATADIR variable" && exit 1

    SUGGEST_EXEC_COMMAND="kubectl --namespace=$POD_NAMESPACE exec -c init-config $POD_NAME --"

    function wsrepNewCluster {
      sed -i 's|^#init-new-cluster#||' /etc/mysql/conf.d/galera.cnf
    }

    function wsrepRecover {
      sed -i 's|^#init-recover#||' /etc/mysql/conf.d/galera.cnf
    }

    [[ $STATEFULSET_SERVICE = mariadb.* ]] || echo "WARNING: unexpected service name $STATEFULSET_SERVICE, Peer detection below may fail falsely."

    # if [ $HOST_ID -eq 0 ]; then
      echo "This is the 1st statefulset pod. Checking if the statefulset is down ..."
      getent hosts mariadb
      [ $? -eq 2 ] && {
        # https://github.com/docker-library/mariadb/commit/f76084f0f9dc13f29cce48c727440eb79b4e92fa#diff-b0fa4b30392406b32de6b8ffe36e290dR80
        if [ ! -d "$DATADIR/mysql" ]; then
          echo "No database in $DATADIR; configuring $POD_NAME for initial start"
          [ $HOST_ID -eq 0 ] && wsrepNewCluster
        else
          set +x
          echo "----- ACTION REQUIRED -----"
          echo "No peers found, but data exists. To start in wsrep_new_cluster mode, run:"
          echo "  $SUGGEST_EXEC_COMMAND touch /tmp/confirm-new-cluster"
          echo "Or to start in recovery mode, to see replication state, run:"
          echo "  $SUGGEST_EXEC_COMMAND touch /tmp/confirm-recover"
          echo "Or to try a regular start (for example after recovery + manual intervention), run:"
          echo "  $SUGGEST_EXEC_COMMAND touch /tmp/confirm-resume"
          echo "Waiting for response ..."
          while [ ! -f /tmp/confirm-resume ]; do
            sleep 1
            if [ "$AUTO_NEW_CLUSTER" = "true" ]; then
              echo "The AUTO_NEW_CLUSTER env was set to $AUTO_NEW_CLUSTER, will proceed without confirmation"
                [ $HOST_ID -eq 0 ] && wsrepNewCluster
              touch /tmp/confirm-resume
            elif [ -f /tmp/confirm-new-cluster ]; then
              echo "Confirmation received. Resuming new cluster start ..."
              wsrepNewCluster
              touch /tmp/confirm-resume
            elif [ -f /tmp/confirm-recover ]; then
              echo "Confirmation received. Resuming in recovery mode."
              echo "Note: to start the other pods you need to edit OrderedReady and add a command: --wsrep-recover"
              wsrepRecover
              touch /tmp/confirm-resume
            fi
          done
          rm /tmp/confirm-*
          set -x
        fi
      }
    # fi

    # https://github.com/docker-library/mariadb/blob/master/10.2/docker-entrypoint.sh#L62
    mysqld --verbose --help --log-bin-index="$(mktemp -u)" | tee /tmp/mariadb-start-config | grep -e ^version -e ^datadir -e ^wsrep -e ^binlog -e ^character-set -e ^collation
